(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{403:function(t,a,v){"use strict";v.r(a);var r=v(42),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"javascript-概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javascript-概述"}},[t._v("#")]),t._v(" JavaScript 概述")]),t._v(" "),v("p",[t._v("因为 JS 看起来和其它语言很像，所以初学者总是误以为 JS 不难学。然而这是一个陷阱，JavaScript中的一些概念和其它语言完全不同。")]),t._v(" "),v("ul",[v("li",[t._v("函数是一等公民")]),t._v(" "),v("li",[t._v("闭包")]),t._v(" "),v("li",[t._v("作用域")]),t._v(" "),v("li",[t._v("基于原型的面向对象")]),t._v(" "),v("li",[t._v("函数也是对象")])]),t._v(" "),v("h2",{attrs:{id:"js-代码的运行"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#js-代码的运行"}},[t._v("#")]),t._v(" JS 代码的运行")]),t._v(" "),v("p",[t._v("JavaScript 语言一直在发展，但 JS 引擎的支持往往没那么快，可以在 "),v("a",{attrs:{href:"https://kangax.github.io/compat-table/es6/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://kangax.github.io/compat-table/es6/"),v("OutboundLink")],1),t._v(" 查看 JS 特性的支持情况。对于不支持的特性可以使用 "),v("a",{attrs:{href:""}},[t._v("Babel")]),t._v(" 或 Traceur 转换。")]),t._v(" "),v("p",[t._v("JavaScript 可以运行在各种环境中，但最常见的还是运行在浏览器和 Node 上。在现实世界中浏览器并不能完美实现 Web 标准，这就引入了 "),v("a",{attrs:{href:""}},[t._v("Polyfill/Shim")]),t._v(" 的概念。Babel 也提供了 Polyfill 的 runetime。")]),t._v(" "),v("h2",{attrs:{id:"事件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),v("p",[t._v("不管是浏览器还是 Node 环境，都采用了单线程的执行模型（未来 JS 可能会有多线程，但不是现在），因此引入了"),v("a",{attrs:{href:""}},[t._v("事件队列/事件循环")]),t._v("的概念。和多线程模型不同，在 JS 中如果某段代码执行时间过长是会阻塞用户 UI 操作，让用户感到卡顿。")]),t._v(" "),v("p",[t._v("事件有很多，按照触发源划分可以分为：浏览器事件、网络事件、用户事件、计时器事件。一些用户事件会被高频率触发（如 mousemove），这样事件处理函数也会被高频调用，非常耗费性能和资源，这就引入了"),v("a",{attrs:{href:""}},[t._v("节流/防抖")]),t._v("的概念。")]),t._v(" "),v("h2",{attrs:{id:"函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),v("p",[t._v("精通 JavaScript 的一个秘诀是要明白 JS 函数和其它语言存在巨大差异：")]),t._v(" "),v("ul",[v("li",[t._v("在 JS 中函数也是对象，对于函数 "),v("code",[t._v("function foo()")]),t._v(" 我们可以 "),v("code",[t._v("foo.xxx = 1")]),t._v(" 从而实现一些高级的需求")]),t._v(" "),v("li",[t._v("函数会有 2 个隐含参数："),v("code",[t._v("this")]),t._v("、"),v("code",[t._v("arguments")])])]),t._v(" "),v("p",[t._v("精通 JavaScript 的另一个秘诀是要将它视作一门函数式语言，这本身是个大话题，可以阅读"),v("a",{attrs:{href:"https://book.douban.com/subject/30283769/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《JavaScript函数式编程指南》"),v("OutboundLink")],1),t._v("。这里简单列几个术语吧：")]),t._v(" "),v("ul",[v("li",[t._v("Memorization")]),t._v(" "),v("li",[t._v("柯里化")])])])}),[],!1,null,null,null);a.default=e.exports}}]);