(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{482:function(t,e,s){"use strict";s.r(e);var a=s(42),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"topk-专题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#topk-专题"}},[t._v("#")]),t._v(" TopK 专题")]),t._v(" "),s("p",[t._v("找TopK的方法如下。")]),t._v(" "),s("ul",[s("li",[t._v("最正统的方法是用堆")]),t._v(" "),s("li",[t._v("也可以用sort偷懒解决")]),t._v(" "),s("li",[t._v("甚至可以用快排的思想，这叫做快速选择算法，见"),s("a",{attrs:{href:"https://leetcode-cn.com/problems/zui-xiao-de-kge-shu-lcof/",target:"_blank",rel:"noopener noreferrer"}},[t._v("剑指 Offer 40. 最小的k个数"),s("OutboundLink")],1),t._v("的题解")])]),t._v(" "),s("p",[t._v("K是什么？")]),t._v(" "),s("ul",[s("li",[t._v("K可以是整数，这最简单了，见"),s("a",{attrs:{href:"https://leetcode-cn.com/problems/zui-xiao-de-kge-shu-lcof/",target:"_blank",rel:"noopener noreferrer"}},[t._v("剑指 Offer 40. 最小的k个数"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("K可以是出现的频率，见"),s("a",{attrs:{href:"https://leetcode-cn.com/problems/top-k-frequent-elements/",target:"_blank",rel:"noopener noreferrer"}},[t._v("347. 前 K 个高频元素"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://leetcode-cn.com/problems/top-k-frequent-words/",target:"_blank",rel:"noopener noreferrer"}},[t._v("692. 前K个高频单词"),s("OutboundLink")],1),t._v("，可以构造"),s("code",[t._v("(freq, num)")]),t._v("的复合结构进行堆排序，这就需要内置的堆支持传入比较器了（各个语言有各自的办法）")]),t._v(" "),s("li",[t._v("K可以是其它东西，见"),s("a",{attrs:{href:"https://leetcode-cn.com/problems/find-k-closest-elements/",target:"_blank",rel:"noopener noreferrer"}},[t._v("658. 找到 K 个最接近的元素"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://leetcode-cn.com/problems/k-closest-points-to-origin/",target:"_blank",rel:"noopener noreferrer"}},[t._v("973. 最接近原点的 K 个点"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"如果k是整数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果k是整数"}},[t._v("#")]),t._v(" 如果K是整数")]),t._v(" "),s("p",[t._v("又分为大顶堆、小顶堆来解决，可以直接用内置的堆/优先级队列。")]),t._v(" "),s("p",[t._v("像Python不支持大顶堆怎么办呢？")]),t._v(" "),s("p",[t._v("方法一：取负数把大顶堆问题变小顶堆问题（妙啊！开拓思维）")]),t._v(" "),s("p",[t._v("方法二：建立小顶堆后弹出N - K个元素，剩下K个就是了（妙啊！开拓思维）")]),t._v(" "),s("h2",{attrs:{id:"如果k是自定义结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#如果k是自定义结构"}},[t._v("#")]),t._v(" 如果K是自定义结构")]),t._v(" "),s("p",[t._v("对于系统不认识的类型，还想要调用系统自带的函数，API风格有：")]),t._v(" "),s("ul",[s("li",[t._v("Python要传入key函数用于提取出可比较的key")]),t._v(" "),s("li",[t._v("Java要传入Comparator用于比较两个元素的大小")]),t._v(" "),s("li",[t._v("Python 的 Tuple 可以排序，所以还可以用 Tuple 包裹自定结构，把 Rank 值放在 Tuple 的第一个元素")])]),t._v(" "),s("p",[t._v("Python代码示例：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" heapq "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" nlargest\narr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aa'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bb'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cc'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\ntmp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nlargest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("operator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("itemgetter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsorted_arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("word "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" word "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" tmp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ['bb', 'cc']")]),t._v("\n")])])]),s("p",[t._v("Java代码示例：略。")]),t._v(" "),s("p",[t._v("对比来说，Python这种风格看起来很优雅，但适用面不广，比如"),s("a",{attrs:{href:"https://leetcode-cn.com/problems/find-k-closest-elements/",target:"_blank",rel:"noopener noreferrer"}},[t._v("658. 找到 K 个最接近的元素"),s("OutboundLink")],1),t._v("这题Python用堆来做就很难提取出key。")])])}),[],!1,null,null,null);e.default=n.exports}}]);