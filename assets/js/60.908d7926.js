(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{429:function(e,t,a){"use strict";a.r(t);var r=a(42),v=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("p",[e._v("Self是一门基于原型的语言，它激发了历史上其它编程语言（如JavaScript）。")]),e._v(" "),a("h2",{attrs:{id:"system-overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#system-overview"}},[e._v("#")]),e._v(" System Overview")]),e._v(" "),a("p",[e._v("Self由Self world和Self virtual machine两部分组成。")]),e._v(" "),a("p",[e._v("VM的主要任务是：")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("执行代码，代码保存在Self world对象中")])]),e._v(" "),a("li",[a("p",[e._v("提供内置的基本操作（用C++写的），包括算数、对象拷贝、IO操作等")])])]),e._v(" "),a("p",[e._v("Self world其实是Self对象的集合，相当于是语言内置的一些对象。你的程序不但可以使用这些对象，而且可以修改这些对象。")]),e._v(" "),a("p",[a("img",{attrs:{src:"img/p1.2.png",alt:"Self程序编译过程"}})]),e._v(" "),a("p",[e._v("上图中展示了Self程序编译的过程，分为两个阶段。")]),e._v(" "),a("p",[e._v("第一阶段：不管是通过界面输入的代码，或是通过文件读取的代码，都会被解析成Self对象。**这些对象中有些是数据对象，有些是方法，方法用字节码表示。**字节码可以交给Self VM执行。")]),e._v(" "),a("p",[e._v("第二阶段：将字节码编译成机器代码。这一步带有缓存机制，所以字节码第一次执行会比第二次执行慢。相比直接编译成机器码的语言，Self的VM会浪费更多时间和空间。")]),e._v(" "),a("h2",{attrs:{id:"language-reference"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#language-reference"}},[e._v("#")]),e._v(" Language Reference")]),e._v(" "),a("p",[e._v("本章详细介绍了Self的语法和语义。语法的早期版本在Ungar和Smith的原始Self论文中介绍过：《SELF The Power of Simplicity》。本章包含了对该语言的后续修改。本章假定你已经了解面向对象的基本概念。")]),e._v(" "),a("p",[e._v("语法使用扩展巴科斯范式（EBNF）描述，若对EBNF不熟悉请自行补充编译原理相关基础。")]),e._v(" "),a("h3",{attrs:{id:"对象（object）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象（object）"}},[e._v("#")]),e._v(" 对象（Object）")]),e._v(" "),a("h4",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[e._v("#")]),e._v(" 语法")]),e._v(" "),a("p",[e._v("对象字面量用圆括号分开。")])])}),[],!1,null,null,null);t.default=v.exports}}]);