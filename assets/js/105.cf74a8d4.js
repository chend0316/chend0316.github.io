(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{476:function(e,r,t){"use strict";t.r(r);var n=t(42),a=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"数据结构"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[e._v("#")]),e._v(" 数据结构")]),e._v(" "),t("p",[e._v("链表题本身不难，但在代码实现上细节很容易出错，一定要刻意练习。")]),e._v(" "),t("p",[e._v("栈、队列、堆都是非常常用的数据结构，要熟练使用各语言内置的库。堆还分为大顶堆、小顶堆、自定义元素类型堆。")]),e._v(" "),t("p",[e._v("Trie 和并查集都是新型数据结构，各语言没有内置，需要自己实现。并查集有 rank、路径压缩两种优化办法，路径压缩不需要引入额外的数组，比较常用。")]),e._v(" "),t("h2",{attrs:{id:"习题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#习题"}},[e._v("#")]),e._v(" 习题")]),e._v(" "),t("h3",{attrs:{id:"链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[e._v("#")]),e._v(" 链表")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/reverse-linked-list/",target:"_blank",rel:"noopener noreferrer"}},[e._v("206. 反转链表"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/swap-nodes-in-pairs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("24. 两两交换链表中的节点"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/linked-list-cycle/",target:"_blank",rel:"noopener noreferrer"}},[e._v("141. 环形链表"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/linked-list-cycle-ii/",target:"_blank",rel:"noopener noreferrer"}},[e._v("142. 环形链表 II"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/reverse-nodes-in-k-group/",target:"_blank",rel:"noopener noreferrer"}},[e._v("25. K 个一组翻转链表"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"堆（优先级队列）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#堆（优先级队列）"}},[e._v("#")]),e._v(" 堆（优先级队列）")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/kth-largest-element-in-a-stream/",target:"_blank",rel:"noopener noreferrer"}},[e._v("703. 数据流中的第K大元素"),t("OutboundLink")],1),e._v("，")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/sliding-window-maximum/",target:"_blank",rel:"noopener noreferrer"}},[e._v("239. 滑动窗口最大值"),t("OutboundLink")],1),e._v("，这题除了用大顶堆，还有一个线性时间的算法；")])]),e._v(" "),t("h3",{attrs:{id:"栈、队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈、队列"}},[e._v("#")]),e._v(" 栈、队列")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/backspace-string-compare/",target:"_blank",rel:"noopener noreferrer"}},[e._v("844. 比较含退格的字符串"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/implement-stack-using-queues/",target:"_blank",rel:"noopener noreferrer"}},[e._v("225. 用队列实现栈"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/implement-queue-using-stacks/",target:"_blank",rel:"noopener noreferrer"}},[e._v("232. 用栈实现队列"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/valid-parentheses/",target:"_blank",rel:"noopener noreferrer"}},[e._v("20. 有效的括号"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#树"}},[e._v("#")]),e._v(" 树")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("236. 二叉树的最近公共祖先"),t("OutboundLink")],1)])]),e._v(" "),t("h4",{attrs:{id:"二叉树遍历"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二叉树遍历"}},[e._v("#")]),e._v(" 二叉树遍历")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/binary-tree-preorder-traversal/",target:"_blank",rel:"noopener noreferrer"}},[e._v("先序遍历"),t("OutboundLink")],1),e._v("由于是尾递归，所以很容易改成迭代。\n"),t("a",{attrs:{href:"https://leetcode-cn.com/problems/binary-tree-inorder-traversal/",target:"_blank",rel:"noopener noreferrer"}},[e._v("中序遍历"),t("OutboundLink")],1),e._v("改迭代比较难，主要方法有颜色标记法、左臂下探法。\n"),t("a",{attrs:{href:"https://leetcode-cn.com/problems/binary-tree-postorder-traversal/",target:"_blank",rel:"noopener noreferrer"}},[e._v("后序遍历"),t("OutboundLink")],1),e._v("改迭代更难，我没研究。")]),e._v(" "),t("p",[e._v("二叉树遍历改迭代感觉没啥意义，有精力还不如先练其它题目。")]),e._v(" "),t("h4",{attrs:{id:"二叉搜索树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二叉搜索树"}},[e._v("#")]),e._v(" 二叉搜索树")]),e._v(" "),t("p",[e._v("二叉搜索树有非常强的递归性质，做这类题更多的是练习递归思维，也是很有意义的。")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/validate-binary-search-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("98. 验证二叉搜索树"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("235. 二叉搜索树的最近公共祖先"),t("OutboundLink")],1)])]),e._v(" "),t("p",[e._v("搜索树和链表相互转换的题目，这类题目要求对递归、链表有扎实基础，刚开始做会有点难，但非常有训练意义：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/increasing-order-search-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("897. 递增顺序查找树"),t("OutboundLink")],1),e._v("、"),t("a",{attrs:{href:"https://leetcode-cn.com/problems/binode-lcci/",target:"_blank",rel:"noopener noreferrer"}},[e._v("面试题 17.12. BiNode"),t("OutboundLink")],1),e._v("，这两题完全一样")])]),e._v(" "),t("h3",{attrs:{id:"trie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#trie"}},[e._v("#")]),e._v(" Trie")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/implement-trie-prefix-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("208. 实现 Trie (前缀树)"),t("OutboundLink")],1),e._v("，用来背代码模板")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/word-search/",target:"_blank",rel:"noopener noreferrer"}},[e._v("79. 单词搜索"),t("OutboundLink")],1),e._v("，Trie、矩阵搜索有机结合，虽然这题可以不用 Trie")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/word-search-ii/",target:"_blank",rel:"noopener noreferrer"}},[e._v("212. 单词搜索 II"),t("OutboundLink")],1),e._v("，Trie + 剪枝")])]),e._v(" "),t("h3",{attrs:{id:"并查集"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#并查集"}},[e._v("#")]),e._v(" 并查集")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/number-of-islands/",target:"_blank",rel:"noopener noreferrer"}},[e._v("200. 岛屿数量"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/friend-circles/",target:"_blank",rel:"noopener noreferrer"}},[e._v("547. 朋友圈"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"有序哈希表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#有序哈希表"}},[e._v("#")]),e._v(" 有序哈希表")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof/",target:"_blank",rel:"noopener noreferrer"}},[e._v("剑指 Offer 50. 第一个只出现一次的字符"),t("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=a.exports}}]);