(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{358:function(t,s,a){t.exports=a.p+"assets/img/store.4301e5cb.png"},359:function(t,s,a){t.exports=a.p+"assets/img/redux-arch.5fec45bd.png"},382:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"前端框架核心原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端框架核心原理"}},[t._v("#")]),t._v(" 前端框架核心原理")]),t._v(" "),n("h2",{attrs:{id:"virtualdom"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#virtualdom"}},[t._v("#")]),t._v(" VirtualDOM")]),t._v(" "),n("p",[t._v("VirtualDOM 是由 React 发扬光大的，后来 Vue 2.x 也引入了并获得非常大的性能提升。")]),t._v(" "),n("h2",{attrs:{id:"vdom-diff-算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vdom-diff-算法"}},[t._v("#")]),t._v(" VDOM Diff 算法")]),t._v(" "),n("p",[t._v("因为 DOM 操作是比较耗时的，所以VDOM 发生变化后，需要根据两棵 VDOM 树之间的差异来计算：如何用"),n("strong",[t._v("最少的步骤")]),t._v("更新 DOM 节点。")]),t._v(" "),n("p",[t._v("React 将这个算法叫做 Diffing，Vue 将这个算法叫做 path。但这两个算法其实是一样的。")]),t._v(" "),n("h3",{attrs:{id:"react：o-n-3-到o-n-的优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react：o-n-3-到o-n-的优化"}},[t._v("#")]),t._v(" React：O(N^3)到O(N)的优化")]),t._v(" "),n("p",[t._v("树的最小编辑距离（Tree Edit Distance）算法需要 O(N^3) 的时间复杂度，而"),n("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/reconciliation.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("React官方文档"),n("OutboundLink")],1),t._v("介绍了 React 如何根据 DOM 场景特点将该算法优化成 O(N) 的复杂度。具体来说 React 对DOM场景做了两个假设：")]),t._v(" "),n("ul",[n("li",[t._v("React 希望类型相同的兄弟节点拥有 key 信息，这就要求业务配合传入 key。这样 Diffing 算法只需根据节点的 key 信息判断是否是同一个节点，不需要遍历子孙节点")]),t._v(" "),n("li",[t._v("React 假设 DOM 节点更多的是同节点下移动，很少发生跨节点移动。有了这个假设，原本树的编辑距离问题就变成了数组的编辑距离问题")])]),t._v(" "),n("p",[t._v("这两个假设，意味着 React 求的是该问题的次优解而不是最优解，这是一种权衡。")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://github.com/supnate",target:"_blank",rel:"noopener noreferrer"}},[t._v("王沛"),n("OutboundLink")],1),t._v("做了一个"),n("a",{attrs:{href:"https://supnate.github.io/react-dom-diff/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("在线Demo"),n("OutboundLink")],1),t._v("，可以在 console log 直观看到 React 在不同情况下节点创建（created）、销毁（unmount）的情况。")]),t._v(" "),n("h3",{attrs:{id:"vue：数组的编辑距离问题求解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue：数组的编辑距离问题求解"}},[t._v("#")]),t._v(" Vue：数组的编辑距离问题求解")]),t._v(" "),n("p",[t._v("这个问题要求使用最少操作将旧数组变为新数组，可以进行的操作有：")]),t._v(" "),n("ul",[n("li",[t._v("创建节点")]),t._v(" "),n("li",[t._v("删除节点")]),t._v(" "),n("li",[t._v("移动节点")])]),t._v(" "),n("p",[t._v("一般人可能就会遍历一遍旧节点用哈希表存起来，再遍历一遍新节点判断是否已经存在哈希表中。这样做的时间复杂度是没问题的，但是空间复杂度达到了 O(N)。")]),t._v(" "),n("p",[t._v("Vue 中实现的算法虽然最坏情况下也达到了 O(N) 的空间复杂度，但 Vue 针对 DOM 场景做了一些优化，让算法在大多情况下都能达到 O(1) 的空间复杂度。如果感兴趣可以阅读以下材料：")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://juejin.im/book/5a36661851882538e2259c0f",target:"_blank",rel:"noopener noreferrer"}},[t._v("剖析 Vue.js 内部运行机制"),n("OutboundLink")],1)]),t._v(" "),n("li",[t._v("Vue 源码中 "),n("code",[t._v("patch.js")]),t._v(" 文件的 "),n("code",[t._v("updateChildren()")]),t._v(" 函数")])]),t._v(" "),n("h2",{attrs:{id:"状态管理框架"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#状态管理框架"}},[t._v("#")]),t._v(" 状态管理框架")]),t._v(" "),n("p",[n("img",{attrs:{src:a(358),alt:""}})]),t._v(" "),n("h3",{attrs:{id:"前端开发所面临的挑战"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前端开发所面临的挑战"}},[t._v("#")]),t._v(" 前端开发所面临的挑战")]),t._v(" "),n("p",[t._v("随着 JavaScript 单页应用开发日趋复杂，组件的状态变得越来越复杂。")]),t._v(" "),n("p",[t._v("Flux, CQRS, Event Sourcing, Redux, Vuex 这些状态管理框架做的事情就是让状态改变（state mutations）变得"),n("strong",[t._v("可预测")]),t._v("。")]),t._v(" "),n("p",[t._v("参考阅读：https://redux.js.org/introduction/motivation")]),t._v(" "),n("p",[t._v("同时这些框架对 state 的操作做了限制，有些限制很严格而且反常识，但遵循这些限制会带来如下开发体验的改进：")]),t._v(" "),n("ul",[n("li",[t._v("时间旅行（time travel）：可以回到过去的某个状态进行调试")]),t._v(" "),n("li",[t._v("状态快照导入导出")]),t._v(" "),n("li",[t._v("状态回放")]),t._v(" "),n("li",[t._v("等等")])]),t._v(" "),n("h3",{attrs:{id:"redux"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#redux"}},[t._v("#")]),t._v(" Redux")]),t._v(" "),n("p",[t._v("Redux 借鉴了 Flux，2015年由 "),n("a",{attrs:{href:"https://github.com/gaearon",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dan Abramov"),n("OutboundLink")],1),t._v(" 提出。二者很像，但在具体细节上有很大区别。后来 Dan 加入了 Facebook，Redux 也就成了 Facebook 官方提供的状态管理框架。")]),t._v(" "),n("p",[t._v("Redux 的三大原则：")]),t._v(" "),n("ul",[n("li",[t._v("单一数据源（Single source of truth）")]),t._v(" "),n("li",[t._v("状态只可读不可写（State is read-only），state 是只读的不能直接修改，必须通过 dispatch 一个 action 进行修改")]),t._v(" "),n("li",[t._v("只能通过纯函数修改状态（Changes are made with pure functions），action 会被发送给 reducer 处理，reducer 必须是纯函数")])]),t._v(" "),n("p",[t._v("所谓纯函数就是其返回值只依赖入参，不依赖全局变量/资源的函数。")]),t._v(" "),n("p",[t._v("参考阅读：https://redux.js.org/introduction/three-principles")]),t._v(" "),n("p",[n("img",{attrs:{src:a(359),alt:""}})]),t._v(" "),n("h4",{attrs:{id:"action"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#action"}},[t._v("#")]),t._v(" Action")]),t._v(" "),n("p",[t._v("Action 是个普通的对象，如下 "),n("code",[t._v("dispatch")]),t._v(" 中的参数就是 Action：")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("store"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'COMPLETE_TODO'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  index"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nstore"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dispatch")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SET_VISIBILITY_FILTER'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  filter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SHOW_COMPLETED'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("p",[t._v("action 是一个普通 JS 对象，这其实比较反常识，但这样带来的好处是可以打印在 log 上、可以被序列化、储存，甚至可以在后期调试或测试时回放出来。")]),t._v(" "),n("h4",{attrs:{id:"reducer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#reducer"}},[t._v("#")]),t._v(" Reducer")]),t._v(" "),n("p",[t._v("Reducer 是纯函数，入参是 state 和 action，它需要返回一个新的 state。注意它不能直接修改 state 本身，哪怕只修改一个小字段也要构造并返回一个新的 state。一个简单的例子如下：")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("todos")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" action")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("switch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("action"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ADD_TODO'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意不能就地修改state")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不能通过 state.push({ text: action.text, completed: false }) 来实现")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 必须拷贝一份新的")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          text"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" action"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          completed"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("case")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'COMPLETE_TODO'")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("todo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("index "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" action"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" Object"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" todo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            completed"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" todo\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" state\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br")])]),n("p",[t._v("我们规定 Reducer 不能就地修改 state，这点非常反人类，稍微有点编程经验的人都会知道这样会使用更多的内存，加重垃圾回收器的负担。针对这点 "),n("a",{attrs:{href:"https://github.com/reduxjs/redux/issues/328",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dan 做出了回应"),n("OutboundLink")],1),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"vuex"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vuex"}},[t._v("#")]),t._v(" Vuex")]),t._v(" "),n("p",[t._v("TODO")])])}),[],!1,null,null,null);s.default=e.exports}}]);