(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{389:function(n,e,t){"use strict";t.r(e);var i=t(42),s=Object(i.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[n._v("#")]),n._v(" Nginx")]),n._v(" "),t("h2",{attrs:{id:"源码安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#源码安装"}},[n._v("#")]),n._v(" 源码安装")]),n._v(" "),t("h3",{attrs:{id:"目录结构介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#目录结构介绍"}},[n._v("#")]),n._v(" 目录结构介绍")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("./nginx-1.18.0\n├── auto\n│   ├── cc  # 编译相关\n│   ├── lib\n│   ├── os  # 判断当前的操作系统\n│   └── types\n├── conf  # 一些示例配置文件\n│   ├── fastcgi.conf\n│   ├── fastcgi_params\n│   ├── koi-utf\n│   ├── koi-win\n│   ├── mime.types\n│   ├── nginx.conf\n│   ├── scgi_params\n│   ├── uwsgi_params\n│   └── win-utf\n├── configure  # 是C语言编译工具链的一员\n└── src\n    ├── core\n    ├── event\n    ├── http\n    ├── mail\n    ├── misc\n    ├── os\n    └── stream\n")])])]),t("h3",{attrs:{id:"编译"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#编译"}},[n._v("#")]),n._v(" 编译")]),n._v(" "),t("p",[n._v("(1) "),t("code",[n._v("./configure --help")]),n._v(" 可以查看支持的配置项")]),n._v(" "),t("p",[n._v("(2) "),t("code",[n._v("./configure --prefix=/home/nginx")]),n._v(" 当看到以下输出时就算成功")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('  nginx path prefix: "/home/nginx"\n  nginx binary file: "/home/nginx/sbin/nginx"\n  nginx modules path: "/home/nginx/modules"\n  nginx configuration prefix: "/home/nginx/conf"\n  nginx configuration file: "/home/nginx/conf/nginx.conf"\n  nginx pid file: "/home/nginx/logs/nginx.pid"\n  nginx error log file: "/home/nginx/logs/error.log"\n  nginx http access log file: "/home/nginx/logs/access.log"\n  nginx http client request body temporary files: "client_body_temp"\n  nginx http proxy temporary files: "proxy_temp"\n  nginx http fastcgi temporary files: "fastcgi_temp"\n  nginx http uwsgi temporary files: "uwsgi_temp"\n  nginx http scgi temporary files: "scgi_temp"\n')])])]),t("p",[n._v("这一步会将中间文件放在 "),t("code",[n._v("objs/")]),n._v(" 目录下，"),t("code",[n._v("objs/ngx_modules.c")]),n._v(" 文件列出了会被编译的模块。")]),n._v(" "),t("p",[n._v("(3) "),t("code",[n._v("make")]),n._v(" 编译，这一步会在 "),t("code",[n._v("objs/")]),n._v(" 目录下生成可执行文件、中间文件、静态库文件、动态库文件。")]),n._v(" "),t("p",[n._v("(4) "),t("code",[n._v("make install")]),n._v(" 安装，用于首次安装的场景")])])}),[],!1,null,null,null);e.default=s.exports}}]);