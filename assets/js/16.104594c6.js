(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{373:function(t,s,a){t.exports=a.p+"assets/img/vue2-options-api-concerns.f268f159.png"},420:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"vue-3-迁移指南"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-3-迁移指南"}},[t._v("#")]),t._v(" Vue 3 迁移指南")]),t._v(" "),n("h2",{attrs:{id:"composition-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#composition-api"}},[t._v("#")]),t._v(" Composition API")]),t._v(" "),n("h3",{attrs:{id:"为啥需要-composition-api-呢？"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为啥需要-composition-api-呢？"}},[t._v("#")]),t._v(" 为啥需要 Composition API 呢？")]),t._v(" "),n("p",[t._v("Vue 组件 (Components) 已经能大大提升代码可维护性、灵活性了，但对于大型项目这还不够，我们需要有更加强大的代码复用能力。")]),t._v(" "),n("p",[t._v("下图是 Vue 2 使用 options API 的代码，我们来看下有啥问题。我们将业务逻辑相关的代码用相同的颜色标注出来了，用术语说就是不同颜色代表不同的关注点 (Concerns)。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(373),alt:""}})]),t._v(" "),n("p",[t._v("你会看到不同颜色的代码混在一起了，这就非常不符合关注点分离 (Separation of concerns) 原则。阅读代码的时候不得不在不同颜色的代码块之间进行“跳跃”，这让代码变得更加费解。")]),t._v(" "),n("p",[t._v("现在 Composition API 可以帮助我们把相同关注点的代码聚集在一起，把不同关注点的代码分开来。")]),t._v(" "),n("h3",{attrs:{id:"如何使用-composition-api"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#如何使用-composition-api"}},[t._v("#")]),t._v(" 如何使用 Composition API")]),t._v(" "),n("p",[t._v("就是 API 增加了一个 "),n("code",[t._v("setup()")]),t._v("。")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("setup()")]),t._v(" 的入参有两个: "),n("code",[t._v("props")]),t._v(" 和 "),n("code",[t._v("context")])]),t._v(" "),n("li",[n("code",[t._v("setup()")]),t._v(" 可以返回: 计算属性、methods、生命周期钩子等等")]),t._v(" "),n("li",[t._v("在生命周期上 "),n("code",[t._v("setup()")]),t._v(" 比组件实例化要早，所以函数体内无法访问 "),n("code",[t._v("this")]),t._v(" 指针")])]),t._v(" "),n("p",[t._v("总的来说，以前 options 里面编写的内容都是静态的；而现在可以由 "),n("code",[t._v("setup()")]),t._v(" 动态生成了。")]),t._v(" "),n("p",[t._v("下面这个例子是在 "),n("code",[t._v("setup()")]),t._v(" 里面定义 data 和 method。")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// src/components/UserRepositories.vue")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" fetchUserRepositories "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/api/repositories'")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ref "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  components"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" RepositoriesFilters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RepositoriesSortBy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" RepositoriesList "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  props"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    user"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("props")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" repositories "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ref() 可以把数据变为响应式的")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("getUserRepositories")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      repositories "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetchUserRepositories")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      repositories"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// data")]),t._v("\n      getUserRepositories "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// method")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("看起来我们只是把原先定义在 options 上的东西移动到了 setup 里面，但后续我们会把 setup 里面的代码提取出来，并且不同的功能放到不同的函数/文件里面，这就实现了关注点分离。")]),t._v(" "),n("h2",{attrs:{id:"ref"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" Ref()")]),t._v(" "),n("p",[t._v("JS 中对于原始类型 (primitive types) 是采用值传递的，"),n("code",[t._v("ref()")]),t._v(" 可以将原始类型包装到一个对象里面去，变成引用传递，这就类似于其它语言中的装箱 (boxing)。不过除了包装原始类型 "),n("code",[t._v("ref()")]),t._v(" 也可以包装一个对象，所以并不完全等同于装箱，在 Vue 中把这个过程叫做 wrap。wrap 后数据会放到 "),n("code",[t._v("value")]),t._v(" 字段里面，代码如下。")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" ref "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vue'")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" counter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ref")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// { value: 0 }")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n\ncounter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\nconsole"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("counter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n")])])]),n("p",[t._v("wrap 带来的影响如下。")]),t._v(" "),n("ol",[n("li",[t._v("所有数据都被包在 "),n("code",[t._v("value")]),t._v(" 字段里，有点怪怪的，开发者要适应一下；")]),t._v(" "),n("li",[t._v("消除了原始类型、值传递，可以帮助 Vue 更彻底的控制 data；因为 Vue 3 把 data 抽出来了，很容易失去对 data 的掌控，从而丢失数据响应式；")])]),t._v(" "),n("p",[t._v("关于第2点，这里打个比方。Vue 2 所有 data 都是挂在 vm 实例里面的，但 Vue 3 把 data 放出来了，所以需要包装到 "),n("code",[t._v("value")]),t._v(" 字段里面避免弄丢。类似于出门遛狗要牵绳。")]),t._v(" "),n("p",[t._v("todo: 给一个丢失数据响应式的例子吧？这篇是入门篇，有必要给这个例子吗？")]),t._v(" "),n("h2",{attrs:{id:"其它需要适应的变化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#其它需要适应的变化"}},[t._v("#")]),t._v(" 其它需要适应的变化")]),t._v(" "),n("h3",{attrs:{id:"v-model"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v-model"}},[t._v("#")]),t._v(" v-model")]),t._v(" "),n("p",[t._v("Vue 2 中，双向绑定通过 "),n("code",[t._v("v-model")]),t._v(" 和 "),n("code",[t._v(".sync")]),t._v(" 语法糖实现，Vue 3 组件可以有多个 "),n("code",[t._v("v-model")]),t._v("，所以不再需要 "),n("code",[t._v(".sync")]),t._v(" 了，语法是 "),n("code",[t._v("v-model:xxx")]),t._v("。")])])}),[],!1,null,null,null);s.default=e.exports}}]);