(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{432:function(v,_,t){"use strict";t.r(_);var d=t(42),a=Object(d.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"语言特性对比"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语言特性对比"}},[v._v("#")]),v._v(" 语言特性对比")]),v._v(" "),t("h2",{attrs:{id:"语言特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语言特性"}},[v._v("#")]),v._v(" 语言特性")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("特性")]),v._v(" "),t("th",[v._v("C++")]),v._v(" "),t("th",[v._v("Java")]),v._v(" "),t("th",[v._v("Py3")]),v._v(" "),t("th",[v._v("ES5")]),v._v(" "),t("th",[v._v("ES6")]),v._v(" "),t("th",[v._v("TS")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("foreach循环")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("foreach遍历Unicode字符串")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td",[v._v("N")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("模板字符串")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("N")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("模板字符串内嵌表达式")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("-")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("2进制整数字面量")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("类型别名")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("Y")])]),v._v(" "),t("tr",[t("td",[v._v("枚举类型")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("N")]),v._v(" "),t("td",[v._v("N")]),v._v(" "),t("td",[v._v("Y")])]),v._v(" "),t("tr",[t("td",[v._v("枚举作用域")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("静态类型：类型推断")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("Y")])]),v._v(" "),t("tr",[t("td",[v._v("内联函数")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("输入输出参数")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("N")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("匿名函数（复杂Lambda）")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("N")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td",[v._v("Y")])]),v._v(" "),t("tr",[t("td",[v._v("可变参数")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("默认参数")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td",[v._v("N")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("Y")])]),v._v(" "),t("tr",[t("td",[v._v("闭包")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td",[v._v("Y")])]),v._v(" "),t("tr",[t("td",[v._v("运算符重载")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td"),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td",[v._v("N")]),v._v(" "),t("td",[v._v("N")]),v._v(" "),t("td",[v._v("N")])]),v._v(" "),t("tr",[t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")])])]),v._v(" "),t("h3",{attrs:{id:"foreach循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#foreach循环"}},[v._v("#")]),v._v(" foreach循环")]),v._v(" "),t("h3",{attrs:{id:"foreach遍历unicode字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#foreach遍历unicode字符串"}},[v._v("#")]),v._v(" foreach遍历Unicode字符串")]),v._v(" "),t("h3",{attrs:{id:"模板字符串"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模板字符串"}},[v._v("#")]),v._v(" 模板字符串")]),v._v(" "),t("h3",{attrs:{id:"模板字符串内嵌表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模板字符串内嵌表达式"}},[v._v("#")]),v._v(" 模板字符串内嵌表达式")]),v._v(" "),t("h3",{attrs:{id:"_2进制整数字面量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2进制整数字面量"}},[v._v("#")]),v._v(" 2进制整数字面量")]),v._v(" "),t("h3",{attrs:{id:"类型别名"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#类型别名"}},[v._v("#")]),v._v(" 类型别名")]),v._v(" "),t("p",[v._v("类型别名是对类型的一种抽象。")]),v._v(" "),t("p",[v._v("在C中通过typedef为已有类型定义别名："),t("code",[v._v("typedef int ID;")])]),v._v(" "),t("p",[v._v("在C++中使用using："),t("code",[v._v("using ID = int;")])]),v._v(" "),t("p",[v._v("在TypeScript中："),t("code",[v._v("type ID = int;")])]),v._v(" "),t("h3",{attrs:{id:"枚举类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#枚举类型"}},[v._v("#")]),v._v(" 枚举类型")]),v._v(" "),t("p",[v._v("枚举可以创建出一个新的数据类型，它的取值范围以及可执行的操作都会受限。")]),v._v(" "),t("p",[v._v("枚举元素是常量，有默认值（从0开始）")]),v._v(" "),t("p",[v._v("C++："),t("code",[v._v("enum Color { RED, GREEN, YELLOW }")])]),v._v(" "),t("h3",{attrs:{id:"静态类型：类型推断"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#静态类型：类型推断"}},[v._v("#")]),v._v(" 静态类型：类型推断")]),v._v(" "),t("p",[v._v("C++在变量声明的时候可以使用auto关键字："),t("code",[v._v("auto val = val1 + val2;")])]),v._v(" "),t("p",[v._v("C++的decltype更强大，其功能和auto形成互补，可以推断出一个变量的类型："),t("code",[v._v("int foo(decltype(val) arg);")])]),v._v(" "),t("h3",{attrs:{id:"输入输出参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#输入输出参数"}},[v._v("#")]),v._v(" 输入输出参数")]),v._v(" "),t("p",[v._v("C可以通过传递指针实现")]),v._v(" "),t("p",[v._v("C++通过引用传递实现")]),v._v(" "),t("p",[v._v("Python因为支持函数多返回值，也不需要支持输入输出参数")]),v._v(" "),t("p",[v._v("题外话：更多时候C++传引用不是为了双向传递，而是避免大对象值传递消耗太多内存，这时使用"),t("code",[v._v("const int *a")]),v._v("可以避免不小心修改实参。")]),v._v(" "),t("h3",{attrs:{id:"匿名函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#匿名函数"}},[v._v("#")]),v._v(" 匿名函数")]),v._v(" "),t("p",[v._v("Python被缩进式语法给坑了，无法支持复杂的Lambda表达式，这也导致Python难以实现函数式编程。")]),v._v(" "),t("h3",{attrs:{id:"可变参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可变参数"}},[v._v("#")]),v._v(" 可变参数")]),v._v(" "),t("h3",{attrs:{id:"默认参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#默认参数"}},[v._v("#")]),v._v(" 默认参数")]),v._v(" "),t("p",[v._v("TS甚至不要求默认参数的位置出现在最后，怎么做到的呢？这得益于JS的"),t("code",[v._v("undefined")]),v._v("的特殊语义，这其实是JS的缺点，但是因祸得福吧。")]),v._v(" "),t("h3",{attrs:{id:"闭包"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[v._v("#")]),v._v(" 闭包")]),v._v(" "),t("h3",{attrs:{id:"运算符重载"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#运算符重载"}},[v._v("#")]),v._v(" 运算符重载")]),v._v(" "),t("p",[v._v("Python支持运算符重载，所以有时判等需要用"),t("code",[v._v("a is b")]),v._v("，而不是用"),t("code",[v._v("a == b")]),v._v("。")]),v._v(" "),t("h2",{attrs:{id:"面向对象语言特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面向对象语言特性"}},[v._v("#")]),v._v(" 面向对象语言特性")]),v._v(" "),t("table",[t("thead",[t("tr",[t("th",[v._v("特性")]),v._v(" "),t("th",[v._v("C++")]),v._v(" "),t("th",[v._v("Java")]),v._v(" "),t("th",[v._v("Py3")]),v._v(" "),t("th",[v._v("ES5")]),v._v(" "),t("th",[v._v("ES6")]),v._v(" "),t("th",[v._v("TS")])])]),v._v(" "),t("tbody",[t("tr",[t("td",[v._v("继承")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("多态")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("Y")])]),v._v(" "),t("tr",[t("td",[v._v("虚基类")]),v._v(" "),t("td",[v._v("Y")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td",[v._v("N")]),v._v(" "),t("td",[v._v("N")]),v._v(" "),t("td",[v._v("Y")])]),v._v(" "),t("tr",[t("td",[v._v("多重继承")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("接口")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("接口继承接口")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td",[v._v("接口继承类")]),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")]),v._v(" "),t("tr",[t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td"),v._v(" "),t("td")])])])])}),[],!1,null,null,null);_.default=a.exports}}]);