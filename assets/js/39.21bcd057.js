(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{397:function(e,r,t){"use strict";t.r(r);var n=t(43),o=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"面试通关40讲"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#面试通关40讲"}},[e._v("#")]),e._v(" 面试通关40讲")]),e._v(" "),t("h3",{attrs:{id:"链表"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#链表"}},[e._v("#")]),e._v(" 链表")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/reverse-linked-list/",target:"_blank",rel:"noopener noreferrer"}},[e._v("206. 反转链表"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/swap-nodes-in-pairs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("24. 两两交换链表中的节点"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/linked-list-cycle/",target:"_blank",rel:"noopener noreferrer"}},[e._v("141. 环形链表"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/linked-list-cycle-ii/",target:"_blank",rel:"noopener noreferrer"}},[e._v("142. 环形链表 II"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/reverse-nodes-in-k-group/",target:"_blank",rel:"noopener noreferrer"}},[e._v("25. K 个一组翻转链表"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"栈、队列"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈、队列"}},[e._v("#")]),e._v(" 栈、队列")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/backspace-string-compare/",target:"_blank",rel:"noopener noreferrer"}},[e._v("844. 比较含退格的字符串"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/implement-stack-using-queues",target:"_blank",rel:"noopener noreferrer"}},[e._v("225. 用队列实现栈"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/implement-queue-using-stacks/",target:"_blank",rel:"noopener noreferrer"}},[e._v("232. 用栈实现队列"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/valid-parentheses/",target:"_blank",rel:"noopener noreferrer"}},[e._v("20. 有效的括号"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"堆（优先级队列）"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#堆（优先级队列）"}},[e._v("#")]),e._v(" 堆（优先级队列）")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/kth-largest-element-in-a-stream/",target:"_blank",rel:"noopener noreferrer"}},[e._v("703. 数据流中的第K大元素"),t("OutboundLink")],1),e._v("，")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/sliding-window-maximum/",target:"_blank",rel:"noopener noreferrer"}},[e._v("239. 滑动窗口最大值"),t("OutboundLink")],1),e._v("，这题除了用大顶堆，还有一个线性时间的算法；")])]),e._v(" "),t("h3",{attrs:{id:"树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#树"}},[e._v("#")]),e._v(" 树")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/validate-binary-search-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("98. 验证二叉搜索树"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-search-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("235. 二叉搜索树的最近公共祖先"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/lowest-common-ancestor-of-a-binary-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("236. 二叉树的最近公共祖先"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"贪心法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#贪心法"}},[e._v("#")]),e._v(" 贪心法")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/",target:"_blank",rel:"noopener noreferrer"}},[e._v("122. 买卖股票的最佳时机 II"),t("OutboundLink")],1),e._v("，力扣上股票问题是一系列问题，这题的特殊性刚好能用贪心，否则通解是用DP")])]),e._v(" "),t("h3",{attrs:{id:"dfs、bfs"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dfs、bfs"}},[e._v("#")]),e._v(" DFS、BFS")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/binary-tree-level-order-traversal/",target:"_blank",rel:"noopener noreferrer"}},[e._v("102. 二叉树的层序遍历"),t("OutboundLink")],1),e._v("，经典面试题，除了用BFS竟然还能用DFS做")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/maximum-depth-of-binary-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("104. 二叉树的最大深度"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/",target:"_blank",rel:"noopener noreferrer"}},[e._v("111. 二叉树的最小深度"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/generate-parentheses/",target:"_blank",rel:"noopener noreferrer"}},[e._v("22. 括号生成"),t("OutboundLink")],1),e._v("，看起来不像，但其实是DFS+剪枝")])]),e._v(" "),t("h3",{attrs:{id:"剪枝"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#剪枝"}},[e._v("#")]),e._v(" 剪枝")]),e._v(" "),t("p",[e._v("剪枝分为两种：")]),e._v(" "),t("ul",[t("li",[e._v("根据局部状态能确定答案就在某个分支，而剪去其它分支")]),e._v(" "),t("li",[e._v("根据局部状态只能确定答案最有可能在某个分支，优先遍历这个分支")])]),e._v(" "),t("p",[e._v("题目：")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/n-queens/",target:"_blank",rel:"noopener noreferrer"}},[e._v("51. N皇后"),t("OutboundLink")],1),e._v("，判断是否要剪枝的逻辑可以遍历棋盘判断，或通过行列的和/差判断")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/n-queens-ii/",target:"_blank",rel:"noopener noreferrer"}},[e._v("52. N皇后 II"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/valid-sudoku/",target:"_blank",rel:"noopener noreferrer"}},[e._v("36. 有效的数独"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/sudoku-solver/",target:"_blank",rel:"noopener noreferrer"}},[e._v("37. 解数独"),t("OutboundLink")],1)])]),e._v(" "),t("h3",{attrs:{id:"其它"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[e._v("#")]),e._v(" 其它")]),e._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/valid-anagram/",target:"_blank",rel:"noopener noreferrer"}},[e._v("242. 有效的字母异位词"),t("OutboundLink")],1),e._v("，")]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/powx-n/",target:"_blank",rel:"noopener noreferrer"}},[e._v("50. Pow(x, n)"),t("OutboundLink")],1)]),e._v(" "),t("li",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/majority-element/",target:"_blank",rel:"noopener noreferrer"}},[e._v("169. 多数元素"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"经典综合题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#经典综合题"}},[e._v("#")]),e._v(" 经典综合题")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://leetcode-cn.com/problems/3sum/submissions/",target:"_blank",rel:"noopener noreferrer"}},[e._v("15. 三数之和"),t("OutboundLink")],1),e._v("，这题考虑到最优复杂度比较大，所以可以先排序，然后是一道双指针的题目。")])])}),[],!1,null,null,null);r.default=o.exports}}]);