(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{418:function(t,e,r){"use strict";r.r(e);var a=r(45),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),r("p",[t._v("教材分先后顺序：")]),t._v(" "),r("ol",[r("li",[t._v("《Algorithm Design》建议读英文版")]),t._v(" "),r("li",[t._v("《算法导论》")])]),t._v(" "),r("h2",{attrs:{id:"时间复杂度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[t._v("#")]),t._v(" 时间复杂度")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.bigocheatsheet.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("big O cheat sheet"),r("OutboundLink")],1)]),t._v(" "),r("h2",{attrs:{id:"network-flow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#network-flow"}},[t._v("#")]),t._v(" Network Flow")]),t._v(" "),r("p",[t._v("在 Graph 上进行贪心无法得到正确答案，但在 Residual Graph 上进行贪心可以，这就是 Ford-Fulkerson 算法的思想。")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Ford%E2%80%93Fulkerson_algorithm",target:"_blank",rel:"noopener noreferrer"}},[t._v("Ford–Fulkerson 算法"),r("OutboundLink")],1),t._v(" 没有规定寻找 augmenting path 的具体方法，所以只是一个算法思想。选取 augmenting path 的方法有很多：")]),t._v(" "),r("ul",[r("li",[t._v("Ford–Fulkerson 算法，随便选一个 augmenting path")]),t._v(" "),r("li",[t._v("Edmonds-Karp 算法，EK 算法用 BFS 优先选一条最短的 augmenting path")]),t._v(" "),r("li",[t._v("《Algorithm Design》介绍了一种约束 bottleneck 的算法")]),t._v(" "),r("li",[t._v("Dinic 算法")]),t._v(" "),r("li",[t._v("MPM 算法")])]),t._v(" "),r("p",[t._v("More Topics")]),t._v(" "),r("ul",[r("li",[t._v("二分图匹配问题")]),t._v(" "),r("li",[t._v("最小费用流")])])])}),[],!1,null,null,null);e.default=n.exports}}]);