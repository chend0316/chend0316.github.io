(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{462:function(a,t,s){"use strict";s.r(t);var r=s(45),v=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"中后台系统常见需求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中后台系统常见需求"}},[a._v("#")]),a._v(" 中后台系统常见需求")]),a._v(" "),s("h2",{attrs:{id:"数据获取、前后端通信"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据获取、前后端通信"}},[a._v("#")]),a._v(" 数据获取、前后端通信")]),a._v(" "),s("h3",{attrs:{id:"数据获取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数据获取"}},[a._v("#")]),a._v(" 数据获取")]),a._v(" "),s("p",[a._v("参考资料：")]),a._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.robinwieruch.de/react-fetching-data",target:"_blank",rel:"noopener noreferrer"}},[a._v("How to fetch data in React"),s("OutboundLink")],1)]),a._v(" "),s("li",[s("a",{attrs:{href:"https://www.robinwieruch.de/react-hooks-fetch-data",target:"_blank",rel:"noopener noreferrer"}},[a._v("How to fetch data with React Hooks"),s("OutboundLink")],1)])]),a._v(" "),s("h3",{attrs:{id:"报错信息统一处理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#报错信息统一处理"}},[a._v("#")]),a._v(" 报错信息统一处理")]),a._v(" "),s("h3",{attrs:{id:"api-接口缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-接口缓存"}},[a._v("#")]),a._v(" API 接口缓存")]),a._v(" "),s("p",[a._v("缓存可以放到 Axios/API/Service 层，也可以放到 Redux/Vuex 层。")]),a._v(" "),s("p",[a._v("有的缓存是有上下文的，一些操作 (如：切换xxx) 会切换上下文，这时需要清空缓存避免脏数据。")]),a._v(" "),s("h2",{attrs:{id:"常见组件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见组件"}},[a._v("#")]),a._v(" 常见组件")]),a._v(" "),s("h3",{attrs:{id:"按钮"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#按钮"}},[a._v("#")]),a._v(" 按钮")]),a._v(" "),s("h4",{attrs:{id:"图标按钮-iconbutton"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图标按钮-iconbutton"}},[a._v("#")]),a._v(" 图标按钮 (IconButton)")]),a._v(" "),s("p",[a._v("以 ElementUI、AntDesign 组件库为例，IconButton 可以支持组件库自带图标和自定义图标。")]),a._v(" "),s("p",[a._v("但组件库自带图标和自定义图标混用容易导致样式体验不一致。")]),a._v(" "),s("p",[s("a",{attrs:{href:"./pages/vue-element-ui-button-custom-icon"}},[a._v("这里")]),a._v("介绍了如何在 Vue ElementUI 下使用自定义图标并保证 IconButton 的体验一致性。")]),a._v(" "),s("h4",{attrs:{id:"异步按钮-asyncbutton"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步按钮-asyncbutton"}},[a._v("#")]),a._v(" 异步按钮 (AsyncButton)")]),a._v(" "),s("p",[a._v("对于触发异步操作的按钮，需要有 Loading 状态。")]),a._v(" "),s("p",[s("a",{attrs:{href:"./pages/react-async-button"}},[a._v("React 实现 AsyncButton")])]),a._v(" "),s("h3",{attrs:{id:"常见布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见布局"}},[a._v("#")]),a._v(" 常见布局")]),a._v(" "),s("h2",{attrs:{id:"登录、授权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#登录、授权"}},[a._v("#")]),a._v(" 登录、授权")]),a._v(" "),s("p",[a._v("【需求】在 login.html 登录后，跳转到 user.html。这个跳转的动作可以用 JS 来实现："),s("code",[a._v("location.href = '/user.html'")]),a._v("，这时浏览器会向服务器发请求获取 user.html。")]),a._v(" "),s("p",[a._v("【技术难点】HTML 是无状态协议，当访问 user.html 时服务器根本“不记得”用户已经登录了。有许多办法来解决这个问题：")]),a._v(" "),s("ul",[s("li",[a._v("使用 Cookie，这主要是后端技术，前端不需要感知，很少需要在 JS 里面访问 Cookie")]),a._v(" "),s("li",[a._v("如果前端是 SPA 单页应用，则不存在页面跳转的问题")])]),a._v(" "),s("p",[a._v("对于 SPA 单页应用，登录过程是：前端发起 POST 请求、POST 响应中带有 token 信息和 UserInfo，前端需要保存 token 信息，此后发给后端的 HTTP 请求中都要带上 token。")]),a._v(" "),s("p",[a._v("【技术实现】前端需要判断是否已登录，以便显示不同的界面。")]),a._v(" "),s("ul",[s("li",[a._v("React 应用可以"),s("RouterLink",{attrs:{to:"/frontend/admin-in-action/pages/redux-auth-userinfo.html"}},[a._v("使用 Redux 维护 UserInfo 信息")])],1)]),a._v(" "),s("p",[a._v("【技术实现】后续前端发送给后端的请求都需要携带 token，一般我们是放在 HTTP 请求头里面。")]),a._v(" "),s("ul",[s("li",[a._v("如果使用 Axios，可以很方便地做到这一点")])]),a._v(" "),s("h3",{attrs:{id:"记住密码、7天免登陆"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#记住密码、7天免登陆"}},[a._v("#")]),a._v(" 记住密码、7天免登陆")]),a._v(" "),s("h2",{attrs:{id:"表单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表单"}},[a._v("#")]),a._v(" 表单")]),a._v(" "),s("h3",{attrs:{id:"表单的初始数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表单的初始数据"}},[a._v("#")]),a._v(" 表单的初始数据")]),a._v(" "),s("h3",{attrs:{id:"表单前端校验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表单前端校验"}},[a._v("#")]),a._v(" 表单前端校验")]),a._v(" "),s("h3",{attrs:{id:"表单后端校验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表单后端校验"}},[a._v("#")]),a._v(" 表单后端校验")]),a._v(" "),s("h3",{attrs:{id:"动态表单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态表单"}},[a._v("#")]),a._v(" 动态表单")]),a._v(" "),s("h3",{attrs:{id:"分步表单"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分步表单"}},[a._v("#")]),a._v(" 分步表单")]),a._v(" "),s("h3",{attrs:{id:"自定义表单控件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义表单控件"}},[a._v("#")]),a._v(" 自定义表单控件")]),a._v(" "),s("h3",{attrs:{id:"区分新建、编辑两种模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#区分新建、编辑两种模式"}},[a._v("#")]),a._v(" 区分新建、编辑两种模式")]),a._v(" "),s("h3",{attrs:{id:"常用表单控件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用表单控件"}},[a._v("#")]),a._v(" 常用表单控件")]),a._v(" "),s("h4",{attrs:{id:"日期控件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#日期控件"}},[a._v("#")]),a._v(" 日期控件")]),a._v(" "),s("p",[a._v("需求：禁止选择今天以前的日期\n我们需要判断 "),s("code",[a._v("time")]),a._v(" 是否小于当前时间，"),s("code",[a._v("dayjs(time).isBefore(dayjs(), 'day')")])]),a._v(" "),s("h3",{attrs:{id:"锚点滚动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#锚点滚动"}},[a._v("#")]),a._v(" 锚点滚动")]),a._v(" "),s("p",[a._v("点击提交按钮，校验失败的表单控件会有红色报错。如果表单特别长的话，错误提示信息可能会在屏幕之外用户看不到，所以希望页面能滚动到第一条错误的位置。如下图所示 (图还没画)。")]),a._v(" "),s("h2",{attrs:{id:"列表页、表格页"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列表页、表格页"}},[a._v("#")]),a._v(" 列表页、表格页")]),a._v(" "),s("h3",{attrs:{id:"分页"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分页"}},[a._v("#")]),a._v(" 分页")]),a._v(" "),s("h3",{attrs:{id:"无限滚动、瀑布流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#无限滚动、瀑布流"}},[a._v("#")]),a._v(" 无限滚动、瀑布流")]),a._v(" "),s("h3",{attrs:{id:"搜索、筛选"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搜索、筛选"}},[a._v("#")]),a._v(" 搜索、筛选")]),a._v(" "),s("h3",{attrs:{id:"加载状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#加载状态"}},[a._v("#")]),a._v(" 加载状态")]),a._v(" "),s("h3",{attrs:{id:"排序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#排序"}},[a._v("#")]),a._v(" 排序")]),a._v(" "),s("h2",{attrs:{id:"路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由"}},[a._v("#")]),a._v(" 路由")]),a._v(" "),s("p",[a._v("除非特别说明，技术栈一律采用 react-router。")]),a._v(" "),s("h3",{attrs:{id:"路由配置对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由配置对象"}},[a._v("#")]),a._v(" 路由配置对象")]),a._v(" "),s("p",[a._v("中后台系统有很多路由，而且需求经常变，路由写死在组件里面不太好。希望能将路由配置在 JS 对象里面，然后根据这个配置自动生成路由。")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("例子：路由写死在组件里面")]),a._v(" "),s("p",[a._v("todo")])]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("例子：路由配置对象")]),a._v(" "),s("p",[a._v("todo")])]),a._v(" "),s("h3",{attrs:{id:"路由参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由参数"}},[a._v("#")]),a._v(" 路由参数")]),a._v(" "),s("h3",{attrs:{id:"嵌套路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#嵌套路由"}},[a._v("#")]),a._v(" 嵌套路由")]),a._v(" "),s("p",[a._v("路由会共用一些布局 UI，所以需要支持嵌套路由。todo: 太难描述了，要给个图。")]),a._v(" "),s("p",[a._v("如果路由是写死在组件内的话，事情变得很容易。但我们之前有需求是将路由配置在 JS 对象里，这样事情就变得困难很多。")]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("例子：如果路由是写死在组件内")]),a._v(" "),s("p",[a._v("todo")])]),a._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[a._v("例子：如何支持配置嵌套路由")]),a._v(" "),s("p",[a._v("todo")])]),a._v(" "),s("h3",{attrs:{id:"路由权限控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由权限控制"}},[a._v("#")]),a._v(" 路由权限控制")]),a._v(" "),s("p",[a._v("由于路由配置是 JS 对象，所以可在运行的时候动态生成，自然能实现各种灵活的需求。")]),a._v(" "),s("p",[a._v("【方案一】对于没权限的路由就直接删掉，实现简单。缺点是无法区分 403 和 404，前者是无访问权限，后者是 URL 路径错误。")]),a._v(" "),s("p",[a._v("【方案二】在路由跳转前进行“拦截”，如果没有权限则执行相应业务逻辑 (跳到 403 页面、跳到登录页)。")]),a._v(" "),s("h3",{attrs:{id:"基于路由生成菜单导航"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于路由生成菜单导航"}},[a._v("#")]),a._v(" 基于路由生成菜单导航")]),a._v(" "),s("p",[a._v("以 react-router 为例，路由是扁平结构，而菜单是树形结构，所以需要转换。")]),a._v(" "),s("p",[a._v("需求是实现路由配置转成菜单配置，关键难点：")]),a._v(" "),s("ul",[s("li",[a._v("扁平结构转树形结构，基于公共前缀实现 (考验算法功底了)")]),a._v(" "),s("li",[a._v("结合路由权限控制，对于无权限路由不应该转成菜单")]),a._v(" "),s("li",[a._v("有些路由需要转成菜单，有些不需要")])]),a._v(" "),s("h2",{attrs:{id:"集成第三方库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#集成第三方库"}},[a._v("#")]),a._v(" 集成第三方库")]),a._v(" "),s("h3",{attrs:{id:"echarts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#echarts"}},[a._v("#")]),a._v(" ECharts")]),a._v(" "),s("h3",{attrs:{id:"d3-js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#d3-js"}},[a._v("#")]),a._v(" D3.js")]),a._v(" "),s("h2",{attrs:{id:"复杂业务需求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂业务需求"}},[a._v("#")]),a._v(" 复杂业务需求")]),a._v(" "),s("h3",{attrs:{id:"文字溢出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#文字溢出"}},[a._v("#")]),a._v(" 文字溢出")]),a._v(" "),s("p",[a._v("文字溢出是 CSS 控制的，但我们需要在 JS 测检测文字溢出，对于溢出的文字启用鼠标悬浮 Tooltip。")]),a._v(" "),s("h3",{attrs:{id:"拖拽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拖拽"}},[a._v("#")]),a._v(" 拖拽")]),a._v(" "),s("h3",{attrs:{id:"动态改变页面布局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态改变页面布局"}},[a._v("#")]),a._v(" 动态改变页面布局")]),a._v(" "),s("h3",{attrs:{id:"定制主题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定制主题"}},[a._v("#")]),a._v(" 定制主题")]),a._v(" "),s("h3",{attrs:{id:"国际化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#国际化"}},[a._v("#")]),a._v(" 国际化")]),a._v(" "),s("h3",{attrs:{id:"精细控制组件权限"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#精细控制组件权限"}},[a._v("#")]),a._v(" 精细控制组件权限")]),a._v(" "),s("h3",{attrs:{id:"分布确认框"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分布确认框"}},[a._v("#")]),a._v(" 分布确认框")]),a._v(" "),s("p",[a._v("当用户进行危险操作的时候，需要弹框询问用户是否确认操作。对于更加复杂的场景，需要结合后端计算，多次询问用户是否确认操作。")]),a._v(" "),s("p",[a._v("例如对于这样的业务场景：")]),a._v(" "),s("ul",[s("li",[a._v("用户点击删除xxx规则，提示「删除无法恢复，确定删除xxx吗」，同时向后端请求 API")]),a._v(" "),s("li",[a._v("后端收到 API 后，计算删除xxx规则会导致的后果，这一步需要较长的时间")]),a._v(" "),s("li",[a._v("前端在 API 请求返回之前，都要显示 Loading 状态")]),a._v(" "),s("li",[a._v("API 请求返回后，根据情况，如果不含危险操作就直接删除")]),a._v(" "),s("li",[a._v("如果含有危险操作，则二次确认提示「删除xxx将导致xxx，是否确认删除」")])]),a._v(" "),s("p",[a._v("我们采用状态机的风格来设计组件的 API。")]),a._v(" "),s("h3",{attrs:{id:"复杂-loading"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复杂-loading"}},[a._v("#")]),a._v(" 复杂 Loading")]),a._v(" "),s("p",[a._v("复杂的需求：")]),a._v(" "),s("ul",[s("li",[a._v("显示 Loading 百分比")]),a._v(" "),s("li",[a._v("显示 Loading 阶段，例如：正在进行合法性校验、正在统计受影响的设备、正在关闭设备")])]),a._v(" "),s("h2",{attrs:{id:"性能需求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#性能需求"}},[a._v("#")]),a._v(" 性能需求")]),a._v(" "),s("h3",{attrs:{id:"图片按需加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片按需加载"}},[a._v("#")]),a._v(" 图片按需加载")]),a._v(" "),s("h3",{attrs:{id:"列表页缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列表页缓存"}},[a._v("#")]),a._v(" 列表页缓存")]),a._v(" "),s("h2",{attrs:{id:"鲁棒性需求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#鲁棒性需求"}},[a._v("#")]),a._v(" 鲁棒性需求")]),a._v(" "),s("h3",{attrs:{id:"图片加载失败"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片加载失败"}},[a._v("#")]),a._v(" 图片加载失败")]),a._v(" "),s("h3",{attrs:{id:"api-调用失败"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-调用失败"}},[a._v("#")]),a._v(" API 调用失败")]),a._v(" "),s("h2",{attrs:{id:"其它"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[a._v("#")]),a._v(" 其它")]),a._v(" "),s("h3",{attrs:{id:"使用-mock-数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-mock-数据"}},[a._v("#")]),a._v(" 使用 Mock 数据")]),a._v(" "),s("h3",{attrs:{id:"管理图标"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#管理图标"}},[a._v("#")]),a._v(" 管理图标")]),a._v(" "),s("h3",{attrs:{id:"单元测试"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#单元测试"}},[a._v("#")]),a._v(" 单元测试")])])}),[],!1,null,null,null);t.default=v.exports}}]);