(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{459:function(a,t,r){"use strict";r.r(t);var v=r(42),_=Object(v.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"编程语言串讲"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#编程语言串讲"}},[a._v("#")]),a._v(" 编程语言串讲")]),a._v(" "),r("h2",{attrs:{id:"通用概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通用概念"}},[a._v("#")]),a._v(" 通用概念")]),a._v(" "),r("h3",{attrs:{id:"程序入口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#程序入口"}},[a._v("#")]),a._v(" 程序入口")]),a._v(" "),r("p",[a._v("C/C++ 程序的入口是 "),r("code",[a._v("int main(int argc, char **argv)")]),a._v(" 函数，入参表示命令行参数，返回值表示程序的返回值。")]),a._v(" "),r("p",[a._v("、Java 中是通过 main 函数的参数、返回值表示。")]),a._v(" "),r("p",[a._v("Golang 程序的入口是 "),r("code",[a._v("package main")]),a._v(" 下面的 "),r("code",[a._v("main()")]),a._v(" 函数，"),r("code",[a._v("main()")]),a._v(" 函数没有入参和返回值。通过 "),r("code",[a._v("os.Args")]),a._v(" 获取命令行参数，通过 "),r("code",[a._v("os.Exit()")]),a._v(" 指定程序的返回值。")]),a._v(" "),r("h3",{attrs:{id:"数组-array"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组-array"}},[a._v("#")]),a._v(" 数组 (Array)")]),a._v(" "),r("p",[a._v("大多编程语言的数组下标从 0 开始，Matlab、Lua 是从 1 开始的，Python 下标还能为负数。")]),a._v(" "),r("p",[a._v("只有 C、C++ 用 "),r("code",[a._v("{1, 2, 3}")]),a._v(" 初始化数组，其它语言都用 "),r("code",[a._v("[1, 2, 3]")]),a._v("。")]),a._v(" "),r("p",[a._v("C、C++ 对数组越界不做检查，Java 会做检查。")]),a._v(" "),r("p",[a._v("除了 C 语言，其它语言都有容器类，除了封装数组基本操作以外还能实现"),r("a",{attrs:{href:""}},[a._v("动态扩容")]),a._v("等策略。")]),a._v(" "),r("h3",{attrs:{id:"函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[a._v("#")]),a._v(" 函数")]),a._v(" "),r("h2",{attrs:{id:"约定"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#约定"}},[a._v("#")]),a._v(" 约定")]),a._v(" "),r("h3",{attrs:{id:"golang"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#golang"}},[a._v("#")]),a._v(" Golang")])])}),[],!1,null,null,null);t.default=_.exports}}]);