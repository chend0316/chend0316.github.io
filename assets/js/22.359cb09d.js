(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{384:function(t,s,a){"use strict";a.r(s);var v=a(42),e=Object(v.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"sql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql"}},[t._v("#")]),t._v(" SQL")]),t._v(" "),a("p",[t._v("我们可以把 SQL 语言按照功能划分成以下的 4 个部分：")]),t._v(" "),a("ul",[a("li",[t._v("DDL，用来定义我们的数据库对象，包括数据库、数据表和列。通过使用 DDL，我们可以创建，删除和修改数据库和表结构。")]),t._v(" "),a("li",[t._v("DML，用来操作和数据库相关的记录，比如增加、删除、修改数据表中的记录。")]),t._v(" "),a("li",[t._v("DCL，用来定义访问权限和安全级别。")]),t._v(" "),a("li",[t._v("DQL，数据查询语言，是 SQL 语言的重中之重。学会编写正确且高效的查询语句，是学习的重点。")])]),t._v(" "),a("h2",{attrs:{id:"select-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select-语句"}},[t._v("#")]),t._v(" SELECT 语句")]),t._v(" "),a("h3",{attrs:{id:"单表查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#单表查询"}},[t._v("#")]),t._v(" 单表查询")]),t._v(" "),a("p",[t._v("对于单张表我们可以")]),t._v(" "),a("ul",[a("li",[t._v("使用 "),a("code",[t._v("where")]),t._v(" 筛选")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("order by")]),t._v(" 进行排序")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("limit")]),t._v(" 限制查询结果数量")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("distinct")]),t._v(" 去重")]),t._v(" "),a("li",[t._v("使用 "),a("code",[t._v("group by")]),t._v(" 和聚合函数进行聚合查询")])]),t._v(" "),a("h3",{attrs:{id:"多表查询"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多表查询"}},[t._v("#")]),t._v(" 多表查询")]),t._v(" "),a("p",[t._v("对于多张表，我们可以使用连接、子查询。")]),t._v(" "),a("p",[t._v("连接分为：笛卡尔积、等值连接、非等值连接、外连接、自连接。")]),t._v(" "),a("p",[t._v("子查询涉及到主表、从表两张表，根据主表和从表是否有关联分为「关联子查询」和「非关联子查询」。")]),t._v(" "),a("ul",[a("li",[t._v("非关联子查询只会执行一次，而关联子查询类似二重循环会执行多次耗时更多")]),t._v(" "),a("li",[t._v("关联子查询常配合集合比较操作符使用，包括 "),a("code",[t._v("IN")]),t._v("、"),a("code",[t._v("ANY")]),t._v("、"),a("code",[t._v("ALL")]),t._v("、"),a("code",[t._v("SOME")])]),t._v(" "),a("li",[t._v("关联子查询的 "),a("code",[t._v("EXISTS")]),t._v(" 和 "),a("code",[t._v("IN")]),t._v(" 的功能相近，如果主表大于从表则 "),a("code",[t._v("IN")]),t._v(" 效率更高，反之 "),a("code",[t._v("EXISTS")]),t._v(" 效率更高")]),t._v(" "),a("li",[t._v("子查询除了可以作为临时表使用外，还可以做为计算字段使用")])]),t._v(" "),a("h2",{attrs:{id:"视图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#视图"}},[t._v("#")]),t._v(" 视图")]),t._v(" "),a("p",[t._v("视图的用途：")]),t._v(" "),a("ul",[a("li",[t._v("复用 SQL 语句")]),t._v(" "),a("li",[t._v("简化复杂的 SQL 语句")]),t._v(" "),a("li",[t._v("数据保护")])]),t._v(" "),a("p",[t._v("具体用法就是在 "),a("code",[t._v("select")]),t._v(" 语句的前面加上视图的语句：")]),t._v(" "),a("ul",[a("li",[t._v("新建视图："),a("code",[t._v("CREATE VIEW view_name AS")])]),t._v(" "),a("li",[t._v("修改视图："),a("code",[t._v("ALTER VIEW view_name AS")])]),t._v(" "),a("li",[t._v("删除视图："),a("code",[t._v("DROP VIEW view_name")])])]),t._v(" "),a("h2",{attrs:{id:"存储过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储过程"}},[t._v("#")]),t._v(" 存储过程")]),t._v(" "),a("p",[t._v("以 MySQL 为例，我们需要先使用 "),a("code",[t._v("DELIMITER")]),t._v(" 定义一个结束符，最后再用 "),a("code",[t._v("DELIMITER")]),t._v(" 将结束符还原为分号。如果使用的是 Navicat 之类的工具，则可以省略 "),a("code",[t._v("DELIMITER")]),t._v("。")]),t._v(" "),a("p",[t._v("存储过程虽然有很多优点，但在工程上也有致命的缺点：会和特定数据库耦合、不方便调试、没有版本控制。所以阿里的最佳实践禁止使用存储过程。")]),t._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CREATE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("PROCEDURE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),t._v("add_num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("BEGIN")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DECLARE")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHILE")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DO")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHILE")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" sum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("END")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELIMITER")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[t._v("#")]),t._v(" 事务")]),t._v(" "),a("p",[t._v("并不是所有存储引擎都支持事务，以 MySQL 为例，可以通过 "),a("code",[t._v("SHOW ENGINES")]),t._v(" 命令来查看 MySQL 支持的存储引擎，以及是否支持事务。")]),t._v(" "),a("h3",{attrs:{id:"事务的特性：acid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务的特性：acid"}},[t._v("#")]),t._v(" 事务的特性：ACID")]),t._v(" "),a("h3",{attrs:{id:"事务的操作：commit、rollback"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务的操作：commit、rollback"}},[t._v("#")]),t._v(" 事务的操作：COMMIT、ROLLBACK")]),t._v(" "),a("h2",{attrs:{id:"游标"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#游标"}},[t._v("#")]),t._v(" 游标")])])}),[],!1,null,null,null);s.default=e.exports}}]);