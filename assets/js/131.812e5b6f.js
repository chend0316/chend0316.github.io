(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{523:function(t,a,s){"use strict";s.r(a);var n=s(45),r=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"linux-使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-使用"}},[t._v("#")]),t._v(" Linux 使用")]),t._v(" "),s("h2",{attrs:{id:"linux-基本操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#linux-基本操作"}},[t._v("#")]),t._v(" Linux 基本操作")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("man man")])]),t._v(" "),s("li",[t._v("gcc")])]),t._v(" "),s("h3",{attrs:{id:"软件安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#软件安装"}},[t._v("#")]),t._v(" 软件安装")]),t._v(" "),s("ul",[s("li",[t._v("手动安装软件")]),t._v(" "),s("li",[t._v("PATH 环境变量")]),t._v(" "),s("li",[t._v("编译软件源码")]),t._v(" "),s("li",[t._v("使用软件管理工具:\n"),s("ul",[s("li",[t._v("Mac 同学: "),s("a",{attrs:{href:"https://brew.sh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("brew"),s("OutboundLink")],1)]),t._v(" "),s("li",[t._v("Ubuntu 同学: apt")])])])]),t._v(" "),s("h2",{attrs:{id:"信号-signal"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#信号-signal"}},[t._v("#")]),t._v(" 信号 (Signal)")]),t._v(" "),s("p",[t._v("Linux 下通过 "),s("code",[t._v("kill")]),t._v(" 命令给进程发送信号或关闭进程。")]),t._v(" "),s("p",[t._v("执行 "),s("code",[t._v("man kill")]),t._v(" 可以看这个命令的用法。")]),t._v(" "),s("div",{staticClass:"language-plain extra-class"},[s("pre",{pre:!0,attrs:{class:"language-plain"}},[s("code",[t._v("NAME\n     kill -- terminate or signal a process\n\nSYNOPSIS\n     kill [-s signal_name] pid ...\n     kill -l [exit_status]\n     kill -signal_name pid ...\n     kill -signal_number pid ...\n\nEXAMPLES\n     Terminate the processes with PIDs 142 and 157:\n\n           kill 142 157\n\n     Send the hangup signal (SIGHUP) to the process with PID 507:\n\n           kill -s HUP 507\n")])])]),s("h3",{attrs:{id:"signal-的产生"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signal-的产生"}},[t._v("#")]),t._v(" Signal 的产生")]),t._v(" "),s("ul",[s("li",[t._v("在终端输入某些组合键的时候，会给进程发送信号，例如，Ctrl+C 产生 SIGINT 信号，Ctrl+Z 产生 SIGTSTP 信号")]),t._v(" "),s("li",[t._v("硬件异常也会产生信号。比如，执行了除以 0 的指令，CPU 会产生异常，然后把 SIGFPE 信号发送给进程。再如，访问了非法内存，内存管理模块就会产生异常，然后把信号 SIGSEGV 发送给进程")])]),t._v(" "),s("h4",{attrs:{id:"sigfpe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sigfpe"}},[t._v("#")]),t._v(" SIGFPE")]),t._v(" "),s("p",[t._v("C 语言除零的结果是未知的，所以说 C 语言不安全，如果程序员写代码不小心除了 0，那后果是不可控的。")]),t._v(" "),s("p",[t._v("后来的语言: Java、Python 在除零的时候直接抛异常。也有一些语言，如 JavaScript，除零的结果是无穷大。")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h4",{attrs:{id:"sigsegv"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sigsegv"}},[t._v("#")]),t._v(" SIGSEGV")]),t._v(" "),s("div",{staticClass:"language-c extra-class"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("include")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("<stdio.h>")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"signal-的种类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#signal-的种类"}},[t._v("#")]),t._v(" Signal 的种类")]),t._v(" "),s("p",[t._v("Linux 下敲: "),s("code",[t._v("man 7 signal")]),t._v("，或者谷歌搜 「linux signal man 7」。")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("小作业")]),t._v(" "),s("p",[t._v("之前我们接触过了 SIGFPE 和 SIGSEGV 这两个 Signal，请查阅文档，回答以下问题：")]),t._v(" "),s("ul",[s("li",[t._v("SIGFPE 是哪些单词的缩写？")]),t._v(" "),s("li",[t._v("SIGSEGV 表示出了什么错？")]),t._v(" "),s("li",[t._v("SIGSEGV 是哪些单词的缩写？这个问题可能在文档中找不到答案。")])])]),t._v(" "),s("h2",{attrs:{id:"管道-pipe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#管道-pipe"}},[t._v("#")]),t._v(" 管道 (Pipe)")]),t._v(" "),s("p",[t._v("在 Linux 下我们常用“竖线”把两个命令连起来，这个“竖线”就是一种匿名管道 (Anonymous Pipes)。管道这个词非常形象，它有两个端口，一端用于读取，另一端用于写入。")])])}),[],!1,null,null,null);a.default=r.exports}}]);