(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{430:function(t,e,a){"use strict";a.r(e);var v=a(42),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"javascript-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript-概述"}},[t._v("#")]),t._v(" JavaScript 概述")]),t._v(" "),a("p",[t._v("因为 JS 看起来和其它语言很像，所以初学者总是误以为 JS 不难学。然而这是一个陷阱，JavaScript中的一些概念和其它语言完全不同。")]),t._v(" "),a("ul",[a("li",[t._v("函数是一等公民")]),t._v(" "),a("li",[t._v("闭包")]),t._v(" "),a("li",[t._v("作用域")]),t._v(" "),a("li",[t._v("基于原型的面向对象")]),t._v(" "),a("li",[t._v("函数也是对象")])]),t._v(" "),a("h2",{attrs:{id:"类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" 类型")]),t._v(" "),a("p",[t._v("JS 有 7 种类型：Undefined、Null、Boolean、String、Number、Symbol、Object。Symbol 是 ES6 新增的。")]),t._v(" "),a("p",[t._v("和多数动态类型语言一样，JS 需要一个运算符来判断变量的类型，这个运算符是："),a("code",[t._v("typeof")]),t._v("。JS 的 "),a("code",[t._v("typeof")]),t._v(" 是有很多缺陷的，其中最臭名昭著的就是 "),a("code",[t._v("typeof null === 'object'")]),t._v("，所以写代码的时候有必要自己封装一个函数来判断类型。")]),t._v(" "),a("p",[t._v("通过 "),a("code",[t._v("==")]),t._v(" 运算判断变量是否相等时会涉及到隐式类型转换，然而 JS 有一套相当复杂的转换规则，所以最佳实践是使用 "),a("code",[t._v("===")]),t._v(" 运算。")]),t._v(" "),a("h2",{attrs:{id:"js-代码的运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-代码的运行"}},[t._v("#")]),t._v(" JS 代码的运行")]),t._v(" "),a("p",[t._v("JavaScript 语言一直在发展，但 JS 引擎的支持往往没那么快，可以在 "),a("a",{attrs:{href:"https://kangax.github.io/compat-table/es6/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://kangax.github.io/compat-table/es6/"),a("OutboundLink")],1),t._v(" 查看 JS 特性的支持情况。对于不支持的特性可以使用 "),a("a",{attrs:{href:"https://babeljs.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel"),a("OutboundLink")],1),t._v(" 或 Traceur 转换。")]),t._v(" "),a("p",[t._v("JavaScript 可以运行在各种环境中，但最常见的还是运行在浏览器和 Node 上。在现实世界中浏览器并不能完美实现 Web 标准，这就引入了 "),a("a",{attrs:{href:""}},[t._v("Polyfill/Shim")]),t._v(" 的概念。Babel 也提供了 Polyfill 的 runetime。")]),t._v(" "),a("h2",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),a("p",[t._v("精通 JavaScript 的一个秘诀是要明白 JS 函数和其它语言存在巨大差异：")]),t._v(" "),a("ul",[a("li",[t._v("在 JS 中函数也是对象，对于函数 "),a("code",[t._v("function foo()")]),t._v(" 我们可以 "),a("code",[t._v("foo.xxx = 1")]),t._v(" 从而实现一些高级的需求")]),t._v(" "),a("li",[t._v("函数会有 2 个隐含参数："),a("code",[t._v("this")]),t._v("、"),a("code",[t._v("arguments")])])]),t._v(" "),a("p",[t._v("精通 JavaScript 的另一个秘诀是要将它视作一门函数式语言，这本身是个大话题，可以阅读"),a("a",{attrs:{href:"https://book.douban.com/subject/30283769/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《JavaScript函数式编程指南》"),a("OutboundLink")],1),t._v("。这里简单列几个术语吧：")]),t._v(" "),a("ul",[a("li",[t._v("Memorization")]),t._v(" "),a("li",[t._v("柯里化")])])])}),[],!1,null,null,null);e.default=r.exports}}]);